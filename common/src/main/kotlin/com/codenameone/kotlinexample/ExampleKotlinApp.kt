package com.codenameone.kotlinexample

import com.codename1.ui.*;
import com.codename1.ui.util.Resources
import com.codename1.ui.plaf.UIManager
import com.codename1.io.Log
import com.codename1.io.NetworkEvent
import com.codename1.ui.events.*

/**
 * This file was generated by [Codename One](https://www.codenameone.com/) for the purpose
 * of building native mobile applications using Java.
 */
open class ExampleKotlinApp {
    private var current: Form? = null
    private var theme: Resources? = null
    fun init(context: Any?) {
        // use two network threads instead of one
        CN.updateNetworkThreadCount(2)
        theme = UIManager.initFirstTheme("/theme")

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true)

        // Pro only feature
        Log.bindCrashProtection(true)
        CN.addNetworkErrorListener(ActionListener({ err: NetworkEvent ->
            // prevent the event from propagating
            err.consume()
            if (err.getError() != null) {
                Log.e(err.getError())
            }
            Log.sendLogAsync()
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null)
        }))
    }

    fun start() {
        if (current != null) {
            current!!.show()
            return
        }
        //WebSocket sock;
        val hi: Form = Form("Hi World", com.codename1.ui.layouts.BoxLayout.y())
        hi.add(com.codename1.ui.Label("Hello World"))
        hi.show()
    }

    fun stop() {
        current = CN.getCurrentForm()
        if (current is Dialog) {
            (current as Dialog).dispose()
            current = CN.getCurrentForm()
        }
    }

    fun destroy() {}
}